// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using smartmetercms.Data;

#nullable disable

namespace smartmetercms.Migrations
{
    [DbContext(typeof(smartmetercmsContext))]
    [Migration("20250524090131_PowerQualityTable")]
    partial class PowerQualityTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("smartmetercms.Models.Bill", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("AmountDue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("BillingPeriodEnd")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("BillingPeriodStart")
                        .HasColumnType("TEXT");

                    b.Property<string>("MeterID")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("PaidStatus")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("TEXT");

                    b.Property<float>("TotalEnergyUsed")
                        .HasColumnType("REAL");

                    b.Property<string>("UserMeterID")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("UserMeterID");

                    b.ToTable("Bill");
                });

            modelBuilder.Entity("smartmetercms.Models.EnergyUsage", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Current")
                        .HasColumnType("REAL");

                    b.Property<double>("EnergyUsed")
                        .HasColumnType("REAL");

                    b.Property<string>("MeterID")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT");

                    b.Property<double>("Voltage")
                        .HasColumnType("REAL");

                    b.HasKey("ID");

                    b.HasIndex("MeterID");

                    b.ToTable("EnergyUsage");
                });

            modelBuilder.Entity("smartmetercms.Models.IntervalEnergyUsage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("EnergyUsed")
                        .HasColumnType("REAL");

                    b.Property<string>("MeterID")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MeterID");

                    b.ToTable("IntervalEnergyUsage");
                });

            modelBuilder.Entity("smartmetercms.Models.Payments", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("AmountPaid")
                        .HasColumnType("TEXT");

                    b.Property<int>("BillID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("BillID");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("smartmetercms.Models.PowerQuality", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Frequency")
                        .HasColumnType("REAL");

                    b.Property<double>("InstantaneousPower")
                        .HasColumnType("REAL");

                    b.Property<string>("MeterID")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("PowerFactor")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT");

                    b.Property<double>("Voltage")
                        .HasColumnType("REAL");

                    b.HasKey("ID");

                    b.ToTable("PowerQuality");
                });

            modelBuilder.Entity("smartmetercms.Models.User", b =>
                {
                    b.Property<string>("MeterID")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .HasColumnType("TEXT");

                    b.HasKey("MeterID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("smartmetercms.Models.Bill", b =>
                {
                    b.HasOne("smartmetercms.Models.User", null)
                        .WithMany("Bills")
                        .HasForeignKey("UserMeterID");
                });

            modelBuilder.Entity("smartmetercms.Models.EnergyUsage", b =>
                {
                    b.HasOne("smartmetercms.Models.User", "User")
                        .WithMany("EnergyUsages")
                        .HasForeignKey("MeterID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("smartmetercms.Models.IntervalEnergyUsage", b =>
                {
                    b.HasOne("smartmetercms.Models.User", "User")
                        .WithMany("IntervalEnergyUsages")
                        .HasForeignKey("MeterID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("smartmetercms.Models.Payments", b =>
                {
                    b.HasOne("smartmetercms.Models.Bill", "Bill")
                        .WithMany("Payments")
                        .HasForeignKey("BillID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");
                });

            modelBuilder.Entity("smartmetercms.Models.Bill", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("smartmetercms.Models.User", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("EnergyUsages");

                    b.Navigation("IntervalEnergyUsages");
                });
#pragma warning restore 612, 618
        }
    }
}
